<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.common.dao.ContractDao">
    <select id="eshopSelectOrdersByStatus" resultType="com.example.common.vo.ContractVo">
        select c.*,
               u1.username   eshopName,
               u2.username   celebrityName,
               g.name       goodName,
               g.type       goodType,
               u1.real_name seller,
               g.img        goodImg,
               g.brand      brand
        from tb_contract c
                 left join tb_user u1 on c.eshop = u1.account
                 left join tb_user u2 on c.celebrity = u2.account
                 left join tb_good g on c.good = g.good_id
        where c.eshop = #{account}
          and c.status = #{status}
        order by c.status, c.start_time desc
        limit #{start}, 10;
    </select>

    <select id="eshopSelectOrders" resultType="com.example.common.vo.ContractVo">
        select c.*,
               u1.username   eshopName,
               u2.username   celebrityName,
               g.name       goodName,
               g.type       goodType,
               u1.real_name seller,
               g.img        goodImg,
               g.brand      brand
        from tb_contract c
                 left join tb_users u1 on c.eshop = u1.account
                 left join tb_users u2 on c.celebrity = u2.account
                 left join tb_goods g on c.good = g.good_id
        where c.eshop = #{account}
        order by c.status, c.start_time desc
        limit #{start}, 10;
    </select>

    <select id="celebritySelectOrdersByStatus" resultType="com.example.common.vo.ContractVo">
        select c.*,
               u1.username   eshopName,
               u2.username   celebrityName,
               g.name       goodName,
               g.type       goodType,
               u1.real_name seller,
               g.img        goodImg,
               g.brand      brand
        from tb_contract c
                 left join tb_user u1 on c.eshop = u1.account
                 left join tb_user u2 on c.celebrity = u2.account
                 left join tb_good g on c.good = g.good_id
        where c.celebrity = #{account}
          and c.status = #{status}
        order by c.status, c.start_time desc
        limit #{start}, 10;
    </select>

    <select id="celebritySelectOrders" resultType="com.example.common.vo.ContractVo">
        select c.*,
               u1.username   eshopName,
               u2.username   celebrityName,
               g.name       goodName,
               g.type       goodType,
               u1.real_name seller,
               g.img        goodImg,
               g.brand      brand
        from tb_contract c
                 left join tb_user u1 on c.eshop = u1.account
                 left join tb_user u2 on c.celebrity = u2.account
                 left join tb_good g on c.id = g.good_id
        where c.celebrity = #{account}
        order by c.status, c.start_time desc
        limit #{start}, 10;
    </select>

    <insert id="insertContract">
        insert into tb_contract (celebrity, eshop, start_time, end_time, status)
        values (#{celebrity}, #{eshop}, #{startDay}, #{lasting}, #{status})
    </insert>
</mapper>